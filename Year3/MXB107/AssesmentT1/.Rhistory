episodes
plot1 <- ggplot(episodes %>% filter(Series == "TOS"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
plot2 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
grid.arrange(plot1, plot2, ncol=2)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
data(episodes)
table(episodes$Bechdel.Wallace.Test)
episodes[episodes$Bechdel.Wallace.Test != 'TRUE',]
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
typeof(episodes$Series)
table(episodes$Series)
episodes[which(episodes$Bechdel.Wallace.Test == TRUE & episodes$Series=='TOS'),]
episodes %>% filter(Series =="TOS")
5/80
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
5/80
a = 5/80
sum(dbinom(0:2, 10, a))
a = 5/80
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
a = 5/80
sum(dbinom(0:2, 10, a))
a
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
a = 5/80
a
sum(dbinom(0:2, 10, a))
1 - sum(dbinom(0:2, 10, a))
sum(dbinom(0:2, 10, a))
dbinom(0:2, 10, a)
sum(dbinom(0:2, 10, a))
sum(dbinom(0, 10, a))
dbinom(0, 10, a)
dbinom(0:2, 10, a)
sum(dbinom(0:2, 10, a))
dbinom(0:2, 10, a)
sum(binom(0:2, 10, a))
sum(dbinom(0:2, 10, a))
##  data(episodes)
sum(dbinom(0:100, 50, 0.52))
##  data(episodes)
1 - sum(dbinom(0:100, 50, 0.52))
##  data(episodes)
sum(dbinom(0:50, 100, 0.52))
dpois?
dpois(50, 0.52)
knitr::opts_chunk$set(  fig.align = 'center', fig.fullwidth=TRUE)
opts <- options(knitr.kable.NA = "")
options(htmltools.dir.version = FALSE)
library(MXB107)
library(gridExtra)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
p = 5/80
dbinom(0:10, 80, p)
success <- 0:10
plot(success, dbinom(0:10, 80, p), type='h')
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
p = 5/80
dbinom(0:10, 80, p)
success <- 0:10
plot(success, dbinom(0:10, 10, p), type='h')
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
p = 5/80
dbinom(0:10, 80, p)
success <- 0:10
l=10*p
plot(success, dbinom(0:10, 10, p), type='h')
plot(success, dpois(10,l))
plot(success, dpois(10,l), type = 'h')
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
p = 5/80
dbinom(0:10, 80, p)
success <- 0:10
l=10*p
plot(success, dbinom(0:10, 10, p), type='h')
plot(success, dpois(0:10,l), type = 'h')
pexp(22.22,0.693,lower.tail = FALSE)/pexp(7,1/10,lower.tail = FALSE)
pexp(22.22,0.693,lower.tail = FALSE)/pexp(7,0.693,lower.tail = FALSE)
pexp(22,0.693,lower.tail = FALSE)/pexp(7,0.693,lower.tail = FALSE)
pexp(7,0.693,lower.tail = FALSE)
pexp(7,0.693,lower.tail = FALSE)
pexp(7,0.693,lower.tail = FALSE)
pexp(10,0.693,lower.tail = FALSE)/pexp(1,0.693,lower.tail = FALSE)
1- pexp(3,0.693,lower.tail = FALSE)
dbinom(0:7, 10, 0.693 )
sum(dbinom(0:7, 10, 0.693 ))
sum(dbinom(0:7, 10, 0.693 ))
pexp(7,0.693,lower.tail = FALSE)
1- sum(dbinom(0:7, 10, 0.693 ))
pexp(7,0.693,lower.tail = FALSE)
1- sum(dbinom(0:7, 10, 0.693 ))
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(13,0.693,lower.tail = FALSE)/pexp(10,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pexp(3,0.693,lower.tail = FALSE)
pnorm(4.3,2.7)
pnorm(5, 4.3,2.7)
pnorm(4, 4.3,2.7)
pnorm(5, 4.3,2.7)
pnorm(4, 4.3,2.7)
pnorm(5, 4.3,2.7)
pnorm(5, mean=4.3, sd=sqrt(2.7), lower.tail=FALSE)
pnorm(5, mean=4.3, sd=sqrt(2.7))
pnorm(5, mean=4.3, sd=2.7, lower.tail=FALSE)
pnorm(5, mean=4.3, sd=sqrt(2.7), lower.tail=FALSE)
1 - pnorm(6, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
View(episodes)
View(episodes)
1 - pnorm(7, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
pnorm(7, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
View(episodes)
View(episodes)
episodes %>% filter(IMDB.Ranking > 7.9)
pnorm(7, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
episodes %>% filter(IMDB.Ranking > 7.9)
1 - pnorm(7, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
pnorm(7, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
pnorm(7.9, mean=7.55, sd=sqrt(0.6), lower.tail=FALSE)
episodes %>% filter(IMDB.Ranking > 7.9)
knitr::opts_chunk$set(  fig.align = 'center', fig.fullwidth=TRUE)
opts <- options(knitr.kable.NA = "")
options(htmltools.dir.version = FALSE)
library(MXB107)
library(gridExtra)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
sum(dbinom(0:49, 100, 0.52))
l <- 100*0.52
l
sum(ppois(49,52))
pnorm(49, 52, 5)
l <- 100*0.52
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library===== if the dataset episodes not available, type:
##  data(episodes)
sum(dbinom(0:49, 100, 0.52))
l <- 100*0.52
sum(ppois(49,52))
pnorm(49, 52, 5)
pnorm(49, ã€‚0.52, 5)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library===== if the dataset episodes not available, type:
##  data(episodes)
sum(dbinom(0:49, 100, 0.52))
l <- 100*0.52
sum(ppois(49,52))
pnorm(49, 52, 5)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
a = 5/80
a
sum(dbinom(0:2, 10, a))
setwd("C:/Users/zhuju/OneDrive/Desktop/Github/stuff/PythonProject_Sem1/Year3/MXB107/AssesmentT1")
knitr::opts_chunk$set(  fig.align = 'center', fig.fullwidth=TRUE)
opts <- options(knitr.kable.NA = "")
options(htmltools.dir.version = FALSE)
library(MXB107)
library(gridExtra)
plot1 <- ggplot(episodes %>% filter(Series == "TOS"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
plot2 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
grid.arrange(plot1, plot2, ncol=2)
plot1 <- ggplot(episodes %>% filter(Series == "TOS"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
plot2 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
grid.arrange(plot1, plot2, ncol=2)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
data(episodes)
boxplot(IMDB.Ranking~Series, data = episodes, main = "Compare Rating for all Star Trek series",
xlab = "Series name", ylab = "Rating", col = "red", border = "brown")
knitr::opts_chunk$set(  fig.align = 'center', fig.fullwidth=TRUE)
opts <- options(knitr.kable.NA = "")
options(htmltools.dir.version = FALSE)
library(MXB107)
library(gridExtra)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
episodes
plot1 <- ggplot(episodes %>% filter(Series == "TOS"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
plot2 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
grid.arrange(plot1, plot2, ncol=2)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes
plot1 <- ggplot(episodes %>% filter(Series == "TOS"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
plot2 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
grid.arrange(plot1, plot2, ncol=2)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes
plot1 <- ggplot(episodes %>% filter(Series == "TOS"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
plot2 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = IMDB.Ranking))+
geom_histogram(bins = 13)+xlab("")
grid.arrange(plot1, plot2, ncol=2)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes
plot1 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = filter(IMDB.Ranking=="Yes"))+
geom_histogram(bins = 13)+xlab(""))
View(episodes)
View(episodes)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes
plot1 <- ggplot(episodes %>% filter(Series == "TNG"),aes(x = filter(IMDB.Ranking= TRUE))+
geom_histogram(bins = 13)+xlab(""))
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
x <- c(episodes$IMDB.Ranking)
s <- sd(x)
xbar <- mean(x)
s
xbar+2*s
x_bar-2*s
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
x <- c(episodes$IMDB.Ranking)
s <- sd(x)
xbar <- mean(x)
s
xbar+2*s
xbar-2*s
hist(x)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
x <- c(episodes$IMDB.Ranking)
s <- sd(x)
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
x <- c(episodes$IMDB.Ranking)
s <- sd(x)
s
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
# x = as.numeric(unlist(episodes$IMDB.Ranking))
#
# num<-(x-mean(x))^3%>%mean()
# den<-sd(x)^3
# skew<-num/den
# mean(x)
# median(x)
# den
#
#
# x = as.numeric(unlist(episodes$IMDB.Ranking))
# hist(den~IMDB.Ranking, data = episodes)
x <- c(episodes$IMDB.Ranking)
num<-(x-mean(x))^3%>%mean()
den<-sd(x)^3
skew<-num/den
skew
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
data(episodes)
table(episodes$Bechdel.Wallace.Test)
episodes[episodes$Bechdel.Wallace.Test != 'TRUE',]
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
table(episodes$Bechdel.Wallace.Test
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
table(episodes$Bechdel.Wallace.Test)
answer = Num_way_A/total
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
table(episodes$Bechdel.Wallace.Test)
Num_way_A = 366
total = 704
answer = Num_way_A/total
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
table(episodes$Bechdel.Wallace.Test)
Num_way_A = 366
total = 704
answer = Num_way_A/total
answer
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
typeof(episodes$Series)
table(episodes$Series)
episodes[which(episodes$Bechdel.Wallace.Test == TRUE & episodes$Series=='TOS'),]
episodes %>% filter(Series =="TOS")
5/80
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter(Series =="TOS")
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter(Series =="TOS")
episodes[which(episodes$Bechdel.Wallace.Test == TRUE & episodes$Series=='TOS'),]
answer
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter(Series =="TOS")
episodes[which(episodes$Bechdel.Wallace.Test == TRUE & episodes$Series=='TOS'),]
num_pass = 5
total = 80
answer = num_pass / total
answer
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter(Bechdel.Wallace.Test == FALSE, Series =="DS9")
table(episodes$Series)
pAandB = 76/704
pB = 176/704
pAandB/pB
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter(Bechdel.Wallace.Test == FALSE, Series =="DS9")
table(episodes$Series)
pAandB = 76/704
pB = 176/704
pAandB/pB
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="VOY")
episodes %>% filter( Series =="VOY", Season == '3', Bechdel.Wallace.Test=="TRUE")
t1 = 17/704
t2 = 366/704
t1/t2
episodes %>% filter( Series =="VOY", Season == '3')
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="VOY")
episodes %>% filter( Series =="VOY", Season == '3', Bechdel.Wallace.Test=="TRUE")
t1 = 17/704
t2 = 366/704
t1/t2
episodes %>% filter( Series =="VOY", Season == '3')
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
1 - sum(dbinom(1:2, 2, 0.5))
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
a = 5/80
a
sum(dbinom(0:2, 10, a))
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
p = 5/80
dbinom(0:10, 80, p)
success <- 0:10
l=10*p
plot(success, dbinom(0:10, 10, p), type='h')
plot(success, dpois(0:10,l), type = 'h')
##  The library MXB107 should be already loaded, if not type:
##  library(MXB107)
##  If after loading the library if the dataset episodes not available, type:
##  data(episodes)
episodes %>% filter( Series =="TOS", Bechdel.Wallace.Test=="TRUE")
episodes %>% filter( Series =="TOS")
p = 5/80
dbinom(0:10, 80, p)
success <- 0:10
l=10*p
plot(success, dbinom(0:10, 10, p), type='h')
plot(success, dpois(0:10,l), type = 'h')
:::{.box}
**Type your answer here:**
use binomial probability distribution again, where X~binom()
1 - sum(dbinom(0:7, 10, 0.693 ))
1 - sum(dbinom(0:7, 10, 0.693 ))
pexp(3,0.693,lower.tail = FALSE)
pnorm(5, mean=4.3, sd=sqrt(2.7), lower.tail=FALSE)
pnorm(5, mean=4.3, sd=sqrt(2.7), lower.tail=FALSE)
